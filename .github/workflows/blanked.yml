name: started

on:
  workflow_dispatch:
  watch:
   types: [started]

defaults:
  run:
   shell: bash

jobs:
  GSI:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: conload
        uses: falti/dotenv-action@v1.0.4
        id: config
        with:
          path: config.env

      - name: Get variables
        run: |
          echo "BUILD_TIME=$(date +%s | md5sum | awk '{print substr($1,1,10)}')" >> $GITHUB_ENV
          echo "BUILD_sTIME=$(TZ=Asia/Jakarta date -d @$(date +%s) +'%Y-%m-%d %H:%M:%S %Z')" >> $GITHUB_ENV

      - name: Cleanup workspace
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox* google* dotnet* powershell openjdk* php*
          sudo -E apt-get update
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h

      - name: Configuration Environment
        run: |
          sudo apt install -y git wget git gzip unzip curl axel aria2 zstd rename p7zip-full pigz tree

      - name: Get the ErfanGSI tool
        uses: actions/checkout@main
        with:
          repository: Frostleaft07/GxExTxF
          path: ErfanGSIs

      - name: Replace 777 permissions
        run: |
          sudo chmod 777 -R $GITHUB_WORKSPACE/ErfanGSIs

      - name: Fix unexpected exit
        run: |
              sed -i 's/\|\| exit 1//g' ErfanGSIs/url2GSI.sh
              sed -i 's/exit 1//g' ErfanGSIs/url2GSI.sh

      - name: Create and configure the environment required for the ErfanGSI tool
        run: |
          sudo sed -i 's/USE_MIRROR_FOR_PIP\=true/USE_MIRROR_FOR_PIP\=false/' $GITHUB_WORKSPACE/ErfanGSIs/setup.sh
          sudo bash $GITHUB_WORKSPACE/ErfanGSIs/setup.sh
          pip3 install aligo
         # sudo apt-get -y --purge remove "adoptopenjdk-11-hotspot"
         # java -version
         
      - name: Download ROM and make GSI
        run: |
          cd ${{ github.workspace }}/ErfanGSIs/

          # Run the script with the loaded variables
          sudo bash ./url2GSI.sh --ab ${{ steps.config.outputs.rom_url }} ${{ steps.config.outputs.os_type }} ${{ steps.config.outputs.build_type }}
          sudo du -sh $GITHUB_WORKSPACE/ErfanGSIs/output/
          
      - name: compression GSI
        run: |
          cd $GITHUB_WORKSPACE/ErfanGSIs
          mkdir infobuild
          sudo tree
          cp $GITHUB_WORKSPACE/ErfanGSIs/output/*txt $GITHUB_WORKSPACE/ErfanGSIs/infobuild/
          ls $GITHUB_WORKSPACE/ErfanGSIs/output/
          cat $GITHUB_WORKSPACE/ErfanGSIs/infobuild/*txt
          pwd
          7za a -mmt16 -t7z -r Frost_${{ steps.config.outputs.repack_name }}.7z output/*
          ls "Frost_${{ steps.config.outputs.repack_name }}"
          mkdir upload_ab
          ls upload_ab
          if [ $(ls -l Frost_${{ steps.config.outputs.repack_name }} | awk '{print $5}') -gt 2147483647 ]; then tar cvzpf - Frost_${{ steps.config.outputs.repack_name }} | split -d -b 1024m - upload_ab/Frost_${{steps.config.outputs.repack_name }}; else mv Frost_${{ steps.config.outputs.repack_name }} upload_ab/Frost_${{ steps.config.outputs.repack_name }}; fi
          
      - name: Upload SGSI to GH-Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: ${{ github.workspace }}/ErfanGSIs/upload_ab/*
          name: "${{ steps.config.outputs.os_type }}-${{ steps.config.outputs.build_type }}-Android${{ steps.config.outputs.version }}-unpack"
          tag: "${{ github.config.outputs.repack_name }}_${{ steps.config.outputs.build_type }}-${{ steps.config.outputs.version }}-${{ github.run_number }}"
          bodyFile: "${{ github.workspace }}/ErfanGSIs/infobuild/build_info.txt"
          token: ${{ secrets.MY_TOKEN }}
        env:
            MY_TOKEN: ${{ secrets.MY_TOKEN }}
